= content_for :head do
  = render :partial => 'shared/user_form_js', :locals => {:u => @current_user, :autocomplete => true}
= content_for :main_header do
  %h1= current_user.name
  %p Edit your profile

.well
  %p.pull-right= link_to 'Cancel', profile_path, :class => 'btn success'

= form_for(current_user, :url => user_path(current_user), :method => :put) do |f|

  = error_messages_for 'current_user'

  .clearfix
    = f.label :login
    .input= f.text_field :login, :class => 'xxlarge'

  .clearfix
    = f.label :first_name, "First Name"
    .input= f.text_field :first_name, :class => 'xxlarge'

  .clearfix
    = f.label :last_name, "Last Name"
    .input= f.text_field :last_name, :class => 'xxlarge'

  .clearfix
    = f.label :country
    .input= f.country_select :country, ['United States', 'Canada'], {}, :class => 'xxlarge'

  .clearfix
    = f.label :state, "State/Region"
    #states.input= f.text_field :state, :class => 'xxlarge'

  .clearfix
    = f.label :city
    .input= f.text_field :city, :class => 'xxlarge'

  .clearfix
    = f.label :time_zone
    .input= f.time_zone_select :time_zone, ActiveSupport::TimeZone.us_zones, {}, :class => 'xxlarge'

  .clearfix
    = f.label :email
    .input= f.text_field :email, :class => 'xxlarge'

  .clearfix
    = f.label :password
    .input= f.password_field :password, :size=>20,  :value=>"", :class => 'xxlarge'

  .clearfix
    = f.label :password_confirmation, "Password Confirmation"
    .input= f.password_field :password_confirmation, :size=>20,  :value=>"", :class => 'xxlarge'

  - if current_user.has_role?(:guest) or current_user.has_role?(:instructor) or current_user.has_role?(:student)
    .clearfix
      = f.label :list_directory, "Do you want your name listed in the community directory?"
      .input
        %ul.inputs-list
          %li
            %label= f.check_box :list_directory

  - if current_user.has_role?(:guest) or current_user.has_role?(:instructor)
    .clearfix
      = f.label :role, "Type of account"
      Guest
      = f.radio_button :role_code, User::ROLES[:guest]
      Instructor
      = f.radio_button :role_code, User::ROLES[:instructor]
  - if current_user.has_role?(:instructor)
    %input#groups{:type => 'hidden', :value => current_user.groups.length}
    %input#scenarios{:type => 'hidden', :value => current_user.created_scenarios.length}
  .actions
    = f.submit 'Update', :class => 'btn primary'
    or
    = link_to 'Cancel', profile_path, :class => 'btn'
